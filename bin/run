#!/usr/bin/env ruby

require 'bundler/setup'
require 'vic20'

require 'optparse'
require 'scanf'

options = {}

OptionParser.new do |opts|
  opts.banner = 'Usage: run [options] [firmware]'

  opts.on('-p', '--profile', 'profile execution') do |profile|
    options[:profile] = profile
  end

  opts.on('-r', '--reset address', 'override reset vector') do |address, *|
    options[:reset] = address.to_i(16)
  end

  opts.on('-v', '--verbose', 'turn on verbose mode') do |verbose|
    options[:verbose] = verbose
  end
end.parse!

Vic20::Processor.prepend Vic20::Processor::Halt

if options[:verbose]
  Vic20::Processor.prepend Vic20::Processor::Trace
else
  Vic20::Processor.prepend Vic20::Processor::Report
end

memory = Vic20::Memory.new(ARGV[0])
processor = Vic20::Processor.new(memory)

processor.reset(options[:reset])

if options[:profile]
  require 'ruby-prof'

  # profile the code
  result = RubyProf.profile do
    processor.run
  end

  printer = RubyProf::MultiPrinter.new(result)
  printer.print(path: '.', profile: 'profile')
else
  processor.run
end
