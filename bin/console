#!/usr/bin/env ruby

require 'bundler/setup'
require 'pry'
require 'vic20'

memory = Vic20::Memory.new
processor = Vic20::Processor.new(memory)
processor.pc = memory.word_at(0xC000)

# def dasm
#   each do |method, addressing_mode, *args|
#     puts "#{method.upcase} #{args.inspect} (#{addressing_mode})"
#   end
# end

Pry.commands.block_command 'dasm' do
  processor.each do |address, method, addressing_mode, *args|
    printf "%04X  #{method.upcase}", address

    case addressing_mode
    when :absolute
      printf ' $%04X', args[0] + args[1] * 256
    when :absolute_x
      printf ' $%04X,X', args[0] + args[1] * 256
    when :absolute_y
      printf ' $%04X,Y', args[0] + args[1] * 256
    when :accumulator
      printf ' A'
    when :immediate
      printf ' #$%02X', args[0]
    when :implied
    when :indirect
      printf ' ($%04X)', args[0] + args[1] * 256
    when :indirect_x
      printf ' ($%02X,X)', args[0]
    when :indirect_y
      printf ' ($%02X),Y', args[0]
    when :zero_page, :relative
      printf ' $%02X', args[0]
    when :zero_page_x
      printf ' $%02X,X', args[0]
    when :zero_page_y
      printf ' $%02X,Y', args[0]
    else
      raise "Unknown addressing mode (#{addressing_mode.inspect})"
    end
    puts
  end
end

processor.pry prompt: [proc { "#{processor.current_state} > " }, proc { ' | ' }]

# require 'irb'
# IRB.setup nil
# IRB.conf[:IRB_NAME] = 'vic20'
# IRB.conf[:MAIN_CONTEXT] = IRB::Irb.new.context
# # IRB.conf[:PROMPT] = ">"
# require 'irb/ext/multi-irb'
# IRB.irb nil, processor
